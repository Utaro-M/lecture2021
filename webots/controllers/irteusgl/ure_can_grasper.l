;;
(load "webotslib.l")
(defconstant TIME_STEP 32)
(defconstant WAITING 0)
(defconstant GRASPING 1)
(defconstant ROTATING 2)
(defconstant RELEASING 3)
(defconstant ROTATING_BACK 4)
(defun main nil
  (wb_robot_init)
  (setq counter 0 i 0)  (setq state WAITING)   (setq speed 1.0)
  (setq target_positions (float-vector -1.88 -2.14 -2.38 -1.51))
  (setq hand_motors (instantiate integer-vector 3))
  (setf (elt hand_motors 0) (wb_robot_get_device"finger_1_joint_1"))
  (setf (elt hand_motors 1) (wb_robot_get_device "finger_2_joint_1"))
  (setf (elt hand_motors 2) (wb_robot_get_device "finger_middle_joint_1"))
  (setq ur_motors (instantiate integer-vector 4))
  (setf (elt ur_motors 0) (wb_robot_get_device "shoulder_lift_joint"))
  (setf (elt ur_motors 1) (wb_robot_get_device "elbow_joint"))
  (setf (elt ur_motors 2) (wb_robot_get_device "wrist_1_joint"))
  (setf (elt ur_motors 3) (wb_robot_get_device "wrist_2_joint"))
  (dotimes (i 4) (wb_motor_set_velocity (elt ur_motors i) (float speed)))
  (setq distance_sensor (wb_robot_get_device "distance sensor"))
  (wb_distance_sensor_enable distance_sensor TIME_STEP)
  (setq position_sensor (wb_robot_get_device "wrist_1_joint_sensor"))
  (wb_position_sensor_enable position_sensor TIME_STEP)
  (while t
    (wb_robot_step TIME_STEP)
    (when (<= counter 0)
      (cond
	((= state WAITING)
	 (when (< (wb_distance_sensor_get_value distance_sensor) 500)
	   (setq state GRASPING) (setq counter 8)
	   (format t "Grasping can~%")
	   (dotimes (i 3) (wb_motor_set_position (elt hand_motors i) 0.85))))
        ((= state GRASPING)
	 (dotimes (i 4) (wb_motor_set_position (elt ur_motors i) (elt target_positions i)))
	 (format t "Rotating arm~%")
	 (setq state ROTATING))
        ((= state ROTATING)
	 (when (< (wb_position_sensor_get_value position_sensor) -2.3)
	   (setq counter 8) (format t "Releasing can~%") (setq state RELEASING)
	   (dotimes (i 3) (wb_motor_set_position (elt hand_motors i)
						 (wb_motor_get_min_position (elt hand_motors i))))))
        ((= state RELEASING)
	 (dotimes (i 4) (wb_motor_set_position (elt ur_motors i) 0.0))
	 (format t "Rotating arm back~%") (setq state ROTATING_BACK))
        ((= state ROTATING_BACK)
	 (when (> (wb_position_sensor_get_value position_sensor) -0.1)
	   (setq state WAITING) (format t "Waiting can~%")))))
    (decf counter))
  (wb_robot_cleanup))

(main)
